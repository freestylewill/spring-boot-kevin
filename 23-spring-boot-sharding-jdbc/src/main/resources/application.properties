server.port=8088

mybatis-plus.mapper-locations=classpath:mapper/*Mapper.xml
mybatis-plus.type-aliases-package=com.kevin.submeter.entity

# 数据源
spring.shardingsphere.datasource.names=db1
spring.shardingsphere.datasource.db1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db1.driver-class-name=com.mysql.jdbc.Driver
# jdbc:mysql://localhost:3306/sharding_db1?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.db1.url=jdbc:mysql://localhost:3306/sharding_db1?useUnicode=true&useSSL=false&characterEncoding=UTF-8&serverTimezone=GMT%2B8
spring.shardingsphere.datasource.db1.username=root
spring.shardingsphere.datasource.db1.password=123456

#数据分表规则
#指定所需分的表
spring.shardingsphere.sharding.tables.tab_user.actual-data-nodes=db1.tab_user$->{0..2}
#指定主键
spring.shardingsphere.sharding.tables.tab_user.table-strategy.inline.sharding-column=id
#分表规则为主键除以3取模
spring.shardingsphere.sharding.tables.tab_user.table-strategy.inline.algorithm-expression=tab_user$->{id % 3}
#生成主键id
spring.shardingsphere.sharding.tables.tab_user.key-generator.column=id
#分布式主键生成算法 SNOWFLAKE
spring.shardingsphere.sharding.tables.tab_user.key-generator.type=MYSNOWFLAKE

#打印sql
#spring.shardingsphere.props.sql.show=true
#后加载的bean会覆盖之前相同名称的bean
spring.main.allow-bean-definition-overriding=true
